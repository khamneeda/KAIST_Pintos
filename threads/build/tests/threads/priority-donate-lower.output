Kernel command line: -q run priority-donate-lower
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
Boot complete.
Executing 'priority-donate-lower':
(priority-donate-lower) begin
Interrupt 0x0d (#GP General Protection Exception) at rip=800420a2c5
 cr2=0000000000000000 error=               0
rax 6c6576656c5f7465 rbx 0000000000000000 rcx 0000000000000005 rdx 0000000000000029
rsp 0000008004234ee0 rbp 0000008004234ef0 rsi 0000000000000004 rdi 6c6576656c5f7465
rip 000000800420a2c5 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000293
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x80042139fd 0x8004208d87 0x8004209139 0x800420a2df 0x800420a2df 0x800420a2df 0x800420a2df 0x800420a264 0x8004219010 0x80042077aa.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 45 ticks
Thread: 0 idle ticks, 45 kernel ticks, 0 user ticks
Console: 1